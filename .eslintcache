[{"C:\\Users\\Egor2\\React\\trelloapp\\src\\index.js":"1","C:\\Users\\Egor2\\React\\trelloapp\\src\\App.js":"2","C:\\Users\\Egor2\\React\\trelloapp\\src\\reportWebVitals.js":"3","C:\\Users\\Egor2\\React\\trelloapp\\src\\Main\\index.js":"4","C:\\Users\\Egor2\\React\\trelloapp\\src\\Board\\index.js":"5","C:\\Users\\Egor2\\React\\trelloapp\\src\\Main\\BoardView\\index.js":"6","C:\\Users\\Egor2\\React\\trelloapp\\src\\Main\\ColorPickerItem\\index.js":"7","C:\\Users\\Egor2\\React\\trelloapp\\src\\Board\\Table\\index.js":"8","C:\\Users\\Egor2\\React\\trelloapp\\src\\Board\\Table\\Card\\index.js":"9","C:\\Users\\Egor2\\React\\trelloapp\\src\\SingleTon\\state.js":"10","C:\\Users\\Egor2\\React\\trelloapp\\src\\Module\\Table\\table.js":"11","C:\\Users\\Egor2\\React\\trelloapp\\src\\Module\\Card\\card.js":"12","C:\\Users\\Egor2\\React\\trelloapp\\src\\utilits\\index.js":"13","C:\\Users\\Egor2\\React\\trelloapp\\src\\Module\\Board\\index.js":"14"},{"size":486,"mtime":1607784760664,"results":"15","hashOfConfig":"16"},{"size":1772,"mtime":1608301485989,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":3903,"mtime":1608301520407,"results":"19","hashOfConfig":"16"},{"size":2450,"mtime":1608583235863,"results":"20","hashOfConfig":"16"},{"size":527,"mtime":1607788806969,"results":"21","hashOfConfig":"16"},{"size":237,"mtime":1607787304323,"results":"22","hashOfConfig":"16"},{"size":4987,"mtime":1608584885685,"results":"23","hashOfConfig":"16"},{"size":445,"mtime":1608108571305,"results":"24","hashOfConfig":"16"},{"size":675,"mtime":1608321595809,"results":"25","hashOfConfig":"16"},{"size":868,"mtime":1608581771214,"results":"26","hashOfConfig":"16"},{"size":272,"mtime":1608509312929,"results":"27","hashOfConfig":"16"},{"size":203,"mtime":1608509141434,"results":"28","hashOfConfig":"16"},{"size":673,"mtime":1608584861940,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"cnm794",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Egor2\\React\\trelloapp\\src\\index.js",[],["61","62"],"C:\\Users\\Egor2\\React\\trelloapp\\src\\App.js",[],"C:\\Users\\Egor2\\React\\trelloapp\\src\\reportWebVitals.js",[],"C:\\Users\\Egor2\\React\\trelloapp\\src\\Main\\index.js",["63","64"],"import { Modal } from '@material-ui/core';\r\nimport { useState } from 'react';\r\nimport { BoardView } from './BoardView';\r\nimport { ColorPickerItem } from './ColorPickerItem';\r\nimport styles from './index.module.css';\r\n\r\nconst MAX_SYMBOLS = 30;\r\n\r\nexport const MainPage = (props) => {\r\n\r\n    const [isOpen, setIsopen] = useState(false);\r\n    const [color, setColor] = useState(props.boardState.getDefaultColor());\r\n    const [title, setTitle] = useState('')\r\n\r\n    const toggleModalWindow = () => {\r\n        setIsopen(!isOpen);\r\n    }\r\n\r\n    const drawBoardViews = () => {\r\n        const Elements = [];\r\n\r\n        props.boardState.boards.map((board, index) => {\r\n            Elements.push(\r\n                <BoardView \r\n                    board={board}\r\n                    updateColor={props.updateColor}\r\n                    key={index}\r\n                />\r\n            )\r\n        })\r\n\r\n        return Elements;\r\n    }\r\n\r\n    const drawColorPickerItems = () => {\r\n        const Elements = [];\r\n\r\n        props.boardState.availableColors.map((color, index) => {\r\n            Elements.push(\r\n                <ColorPickerItem \r\n                    color={color}\r\n                    setColor={setColor}\r\n                    key={index}\r\n                />\r\n            )\r\n        })\r\n\r\n        return Elements;\r\n    }\r\n\r\n    const updateTitle = (e) => {\r\n        setTitle(e.target.value);\r\n    }\r\n\r\n    const createBoard = () => {\r\n        if(title.length > MAX_SYMBOLS){\r\n            alert('Your title is too long!');\r\n            return;\r\n        }\r\n        props.boardState.addBoard(title, color)\r\n\r\n        toggleModalWindow();\r\n    }\r\n\r\n    const computeColorPickerItemsHeight = () => {\r\n        let NumberOfColorPickerItems = props.boardState.availableColors.length;\r\n\r\n        if(NumberOfColorPickerItems % 3 === 0){\r\n            return NumberOfColorPickerItems / 3;\r\n        }\r\n        return Math.floor(NumberOfColorPickerItems / 3) + 1;\r\n    }\r\n\r\n    return (\r\n        <div className={styles['main-body']}>\r\n            <p className={styles['label-p']}>Ваши доски</p>\r\n            <div className={styles['boards_list']}>\r\n                {drawBoardViews()}\r\n                <div className={styles['create_border']}>\r\n                    <button onClick={ toggleModalWindow } className={styles['create-button']}>Создать</button>\r\n                </div>\r\n            </div>\r\n            <Modal \r\n                open={isOpen}\r\n            >\r\n                <div className={styles['modal-body']}>\r\n                    <div className={styles['create-container']}>\r\n                        <div className={styles['create-input-container']} style={{background: color}}>\r\n                            <input type='text' \r\n                            className={styles['create-input']}\r\n                            onInput={updateTitle}\r\n                            placeholder='Введите название доски'\r\n                            style={{background: color}}\r\n                            />\r\n                             <button className={styles['close-button']} onClick={toggleModalWindow}>&#10005;</button>\r\n                        </div>\r\n                        {\r\n                            title?\r\n                            (\r\n                                <button className={styles['modal-create-button']} onClick={createBoard}>Создать доску</button>\r\n                            ):\r\n                            <button className={styles['modal-create-button_disable']}>Создать доску</button>\r\n                        }\r\n                    </div>\r\n                    <div className={styles['color_picker-container']} style={{maxHeight: computeColorPickerItemsHeight() + 'px'}}>\r\n                        {drawColorPickerItems()}\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Egor2\\React\\trelloapp\\src\\Board\\index.js",["65","66"],"C:\\Users\\Egor2\\React\\trelloapp\\src\\Main\\BoardView\\index.js",[],"C:\\Users\\Egor2\\React\\trelloapp\\src\\Main\\ColorPickerItem\\index.js",[],"C:\\Users\\Egor2\\React\\trelloapp\\src\\Board\\Table\\index.js",["67"],"C:\\Users\\Egor2\\React\\trelloapp\\src\\Board\\Table\\Card\\index.js",["68"],"import { useDrag } from 'react-dnd';\r\nimport styles from './index.module.css';\r\n\r\nexport const Card = (props) => {\r\n\r\n    const [, drag] = useDrag({\r\n        item: {\r\n        type: 'card',\r\n        TableId: props.table.id,\r\n        CardId: props.card.id\r\n    }\r\n    })\r\n\r\n    return(\r\n        <div className={styles['body'] + ' ' + 'toFind'} style={{background: props.color}} data-id={props.card.id} ref={drag}>{props.card.name}</div>\r\n    );\r\n}","C:\\Users\\Egor2\\React\\trelloapp\\src\\SingleTon\\state.js",[],"C:\\Users\\Egor2\\React\\trelloapp\\src\\Module\\Table\\table.js",[],"C:\\Users\\Egor2\\React\\trelloapp\\src\\Module\\Card\\card.js",[],"C:\\Users\\Egor2\\React\\trelloapp\\src\\utilits\\index.js",[],"C:\\Users\\Egor2\\React\\trelloapp\\src\\Module\\Board\\index.js",[],{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":22,"column":52,"nodeType":"75","messageId":"76","endLine":22,"endColumn":54},{"ruleId":"73","severity":1,"message":"74","line":38,"column":61,"nodeType":"75","messageId":"76","endLine":38,"endColumn":63},{"ruleId":"77","severity":1,"message":"78","line":11,"column":69,"nodeType":"79","messageId":"80","endLine":11,"endColumn":71},{"ruleId":"73","severity":1,"message":"74","line":21,"column":48,"nodeType":"75","messageId":"76","endLine":21,"endColumn":50},{"ruleId":"73","severity":1,"message":"74","line":71,"column":45,"nodeType":"75","messageId":"76","endLine":71,"endColumn":47},{"ruleId":"81","severity":1,"message":"82","line":15,"column":46,"nodeType":"79","messageId":"83","endLine":15,"endColumn":47},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-global-assign","no-unsafe-negation"]