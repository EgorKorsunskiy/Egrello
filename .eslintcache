[{"C:\\Users\\Egor2\\React\\trelloapp\\src\\index.js":"1","C:\\Users\\Egor2\\React\\trelloapp\\src\\App.js":"2","C:\\Users\\Egor2\\React\\trelloapp\\src\\reportWebVitals.js":"3","C:\\Users\\Egor2\\React\\trelloapp\\src\\Main\\index.js":"4","C:\\Users\\Egor2\\React\\trelloapp\\src\\Board\\index.js":"5","C:\\Users\\Egor2\\React\\trelloapp\\src\\Main\\BoardView\\index.js":"6","C:\\Users\\Egor2\\React\\trelloapp\\src\\Main\\ColorPickerItem\\index.js":"7","C:\\Users\\Egor2\\React\\trelloapp\\src\\Board\\Table\\index.js":"8","C:\\Users\\Egor2\\React\\trelloapp\\src\\Board\\Table\\Card\\index.js":"9","C:\\Users\\Egor2\\React\\trelloapp\\src\\SingleTon\\state.js":"10","C:\\Users\\Egor2\\React\\trelloapp\\src\\Module\\Table\\table.js":"11","C:\\Users\\Egor2\\React\\trelloapp\\src\\Module\\Card\\card.js":"12","C:\\Users\\Egor2\\React\\trelloapp\\src\\utilits\\index.js":"13","C:\\Users\\Egor2\\React\\trelloapp\\src\\Module\\Board\\index.js":"14","C:\\Users\\Egor2\\React\\trelloapp\\src\\Main\\Filtered\\index.js":"15"},{"size":486,"mtime":1607784760664,"results":"16","hashOfConfig":"17"},{"size":3229,"mtime":1609766530158,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":3949,"mtime":1609740356568,"results":"20","hashOfConfig":"17"},{"size":4539,"mtime":1609766973567,"results":"21","hashOfConfig":"17"},{"size":1094,"mtime":1609770527706,"results":"22","hashOfConfig":"17"},{"size":237,"mtime":1609740367113,"results":"23","hashOfConfig":"17"},{"size":5221,"mtime":1609771815153,"results":"24","hashOfConfig":"17"},{"size":596,"mtime":1609737980394,"results":"25","hashOfConfig":"17"},{"size":740,"mtime":1609739463147,"results":"26","hashOfConfig":"17"},{"size":879,"mtime":1609765782410,"results":"27","hashOfConfig":"17"},{"size":272,"mtime":1608830840567,"results":"28","hashOfConfig":"17"},{"size":203,"mtime":1608833013387,"results":"29","hashOfConfig":"17"},{"size":998,"mtime":1609764070481,"results":"30","hashOfConfig":"17"},{"size":857,"mtime":1609740204575,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"cnm794",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},"C:\\Users\\Egor2\\React\\trelloapp\\src\\index.js",[],["66","67"],"C:\\Users\\Egor2\\React\\trelloapp\\src\\App.js",[],"C:\\Users\\Egor2\\React\\trelloapp\\src\\reportWebVitals.js",[],"C:\\Users\\Egor2\\React\\trelloapp\\src\\Main\\index.js",["68","69"],"import { Modal } from '@material-ui/core';\r\nimport { useState } from 'react';\r\nimport { BoardView } from './BoardView';\r\nimport { ColorPickerItem } from './ColorPickerItem';\r\nimport styles from './index.module.css';\r\n\r\nconst MAX_SYMBOLS = 30;\r\n\r\nexport const MainPage = (props) => {\r\n\r\n    const [isOpen, setIsopen] = useState(false);\r\n    const [color, setColor] = useState(props.boardState.currentColor);\r\n    const [title, setTitle] = useState('')\r\n\r\n    const toggleModalWindow = () => {\r\n        setIsopen(!isOpen);\r\n    }\r\n\r\n    const drawBoardViews = () => {\r\n        const Elements = [];\r\n\r\n        props.boardState.boards.map((board, index) => {\r\n            Elements.push(\r\n                <BoardView \r\n                    boardState={props.boardState}\r\n                    board={board}\r\n                    updateColor={props.updateColor}\r\n                    key={index}\r\n                />\r\n            )\r\n        })\r\n\r\n        return Elements;\r\n    }\r\n\r\n    const drawColorPickerItems = () => {\r\n        const Elements = [];\r\n\r\n        props.boardState.availableColors.map((color, index) => {\r\n            Elements.push(\r\n                <ColorPickerItem \r\n                    color={color}\r\n                    setColor={setColor}\r\n                    key={index}\r\n                />\r\n            )\r\n        })\r\n\r\n        return Elements;\r\n    }\r\n\r\n    const updateTitle = (e) => {\r\n        setTitle(e.target.value);\r\n    }\r\n\r\n    const createBoard = () => {\r\n        if(title.length > MAX_SYMBOLS){\r\n            alert('Your title is too long!');\r\n            return;\r\n        }\r\n        props.boardState.addBoard(title, color)\r\n\r\n        toggleModalWindow();\r\n    }\r\n\r\n    const computeColorPickerItemsHeight = () => {\r\n        let NumberOfColorPickerItems = props.boardState.availableColors.length;\r\n\r\n        if(NumberOfColorPickerItems % 3 === 0){\r\n            return NumberOfColorPickerItems / 3;\r\n        }\r\n        return Math.floor(NumberOfColorPickerItems / 3) + 1;\r\n    }\r\n\r\n    return (\r\n        <div className={styles['main-body']}>\r\n            <p className={styles['label-p']}>Ваши доски</p>\r\n            <div className={styles['boards_list']}>\r\n                {drawBoardViews()}\r\n                <div className={styles['create_border']}>\r\n                    <button onClick={ toggleModalWindow } className={styles['create-button']}>Создать</button>\r\n                </div>\r\n            </div>\r\n            <Modal \r\n                open={isOpen}\r\n            >\r\n                <div className={styles['modal-body']}>\r\n                    <div className={styles['create-container']}>\r\n                        <div className={styles['create-input-container']} style={{background: color}}>\r\n                            <input type='text' \r\n                            className={styles['create-input']}\r\n                            onInput={updateTitle}\r\n                            placeholder='Введите название доски'\r\n                            style={{background: color}}\r\n                            />\r\n                             <button className={styles['close-button']} onClick={toggleModalWindow}>&#10005;</button>\r\n                        </div>\r\n                        {\r\n                            title?\r\n                            (\r\n                                <button className={styles['modal-create-button']} onClick={createBoard}>Создать доску</button>\r\n                            ):\r\n                            <button className={styles['modal-create-button_disable']}>Создать доску</button>\r\n                        }\r\n                    </div>\r\n                    <div className={styles['color_picker-container']} style={{maxHeight: computeColorPickerItemsHeight() + 'px'}}>\r\n                        {drawColorPickerItems()}\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </div>\r\n    )\r\n}","C:\\Users\\Egor2\\React\\trelloapp\\src\\Board\\index.js",["70","71"],"C:\\Users\\Egor2\\React\\trelloapp\\src\\Main\\BoardView\\index.js",["72"],"C:\\Users\\Egor2\\React\\trelloapp\\src\\Main\\ColorPickerItem\\index.js",[],"C:\\Users\\Egor2\\React\\trelloapp\\src\\Board\\Table\\index.js",["73"],"C:\\Users\\Egor2\\React\\trelloapp\\src\\Board\\Table\\Card\\index.js",["74"],"import { useDrag } from 'react-dnd';\r\nimport styles from './index.module.css';\r\n\r\nexport const Card = (props) => {\r\n\r\n    const [, drag] = useDrag({\r\n        item: {\r\n        type: 'card',\r\n        TableId: props.table.id,\r\n        CardId: props.card.id\r\n    }\r\n    })\r\n\r\n    return(\r\n        <div className={styles['body'] + ' ' + 'toFindCards'} style={{background: props.color}} data-id={props.card.id} ref={drag}>\r\n            {props.card.name}\r\n            <button className={styles['button']} onClick={() => props.table.deleteCard(props.card.id)}>&#x2715;</button>\r\n        </div>\r\n    );\r\n}","C:\\Users\\Egor2\\React\\trelloapp\\src\\SingleTon\\state.js",[],"C:\\Users\\Egor2\\React\\trelloapp\\src\\Module\\Table\\table.js",[],"C:\\Users\\Egor2\\React\\trelloapp\\src\\Module\\Card\\card.js",[],"C:\\Users\\Egor2\\React\\trelloapp\\src\\utilits\\index.js",[],"C:\\Users\\Egor2\\React\\trelloapp\\src\\Module\\Board\\index.js",[],"C:\\Users\\Egor2\\React\\trelloapp\\src\\Main\\Filtered\\index.js",["75","76"],"import { useEffect } from 'react';\r\nimport { BoardView } from '../BoardView';\r\nimport styles from './index.module.css';\r\n\r\nexport const FilteredBoards = (props) => {\r\n\r\n    useEffect(() => () => {\r\n        props.setIsSearching(false);\r\n    },[])\r\n\r\n    const drawBoardViews = () => {\r\n        const Elements = [];\r\n        const filteredBoards = props.boardState.boards.filter(board => board.title.includes(props.searchText));\r\n\r\n        filteredBoards.map((board, index) => {\r\n            Elements.push(\r\n                <BoardView \r\n                    boardState={props.boardState}\r\n                    board={board}\r\n                    key={index}\r\n                />\r\n            )\r\n        })\r\n\r\n        return Elements;\r\n    }\r\n\r\n    return(\r\n        <div className={styles['boards_list']}>\r\n            {drawBoardViews()}\r\n        </div>\r\n    );\r\n}",{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":22,"column":52,"nodeType":"83","messageId":"84","endLine":22,"endColumn":54},{"ruleId":"81","severity":1,"message":"82","line":39,"column":61,"nodeType":"83","messageId":"84","endLine":39,"endColumn":63},{"ruleId":"85","severity":1,"message":"86","line":18,"column":7,"nodeType":"87","endLine":18,"endColumn":9,"suggestions":"88"},{"ruleId":"81","severity":1,"message":"82","line":75,"column":35,"nodeType":"83","messageId":"84","endLine":75,"endColumn":37},{"ruleId":"89","severity":1,"message":"90","line":1,"column":10,"nodeType":"91","messageId":"92","endLine":1,"endColumn":14},{"ruleId":"81","severity":1,"message":"82","line":79,"column":45,"nodeType":"83","messageId":"84","endLine":79,"endColumn":47},{"ruleId":"93","severity":1,"message":"94","line":15,"column":46,"nodeType":"95","messageId":"96","endLine":15,"endColumn":47},{"ruleId":"85","severity":1,"message":"86","line":9,"column":7,"nodeType":"87","endLine":9,"endColumn":9,"suggestions":"97"},{"ruleId":"81","severity":1,"message":"82","line":15,"column":43,"nodeType":"83","messageId":"84","endLine":15,"endColumn":45},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["100"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat",["101"],"no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},{"desc":"102","fix":"104"},"Update the dependencies array to be: [props]",{"range":"105","text":"106"},{"range":"107","text":"106"},[538,540],"[props]",[242,244]]