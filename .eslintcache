[{"C:\\Users\\Egor2\\React\\trelloapp\\src\\index.js":"1","C:\\Users\\Egor2\\React\\trelloapp\\src\\App.js":"2","C:\\Users\\Egor2\\React\\trelloapp\\src\\reportWebVitals.js":"3","C:\\Users\\Egor2\\React\\trelloapp\\src\\Main\\index.js":"4","C:\\Users\\Egor2\\React\\trelloapp\\src\\Board\\index.js":"5","C:\\Users\\Egor2\\React\\trelloapp\\src\\Main\\BoardView\\index.js":"6","C:\\Users\\Egor2\\React\\trelloapp\\src\\Main\\ColorPickerItem\\index.js":"7","C:\\Users\\Egor2\\React\\trelloapp\\src\\Board\\Table\\index.js":"8","C:\\Users\\Egor2\\React\\trelloapp\\src\\Board\\Table\\Card\\index.js":"9","C:\\Users\\Egor2\\React\\trelloapp\\src\\SingleTon\\state.js":"10","C:\\Users\\Egor2\\React\\trelloapp\\src\\Module\\Table\\table.js":"11","C:\\Users\\Egor2\\React\\trelloapp\\src\\Module\\Card\\card.js":"12","C:\\Users\\Egor2\\React\\trelloapp\\src\\utilits\\index.js":"13","C:\\Users\\Egor2\\React\\trelloapp\\src\\Module\\Board\\index.js":"14"},{"size":486,"mtime":1607784760664,"results":"15","hashOfConfig":"16"},{"size":1772,"mtime":1608301485989,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":3903,"mtime":1608301520407,"results":"19","hashOfConfig":"16"},{"size":2446,"mtime":1607941955932,"results":"20","hashOfConfig":"16"},{"size":527,"mtime":1607788806969,"results":"21","hashOfConfig":"16"},{"size":237,"mtime":1607787304323,"results":"22","hashOfConfig":"16"},{"size":4947,"mtime":1608308845719,"results":"23","hashOfConfig":"16"},{"size":445,"mtime":1608108571305,"results":"24","hashOfConfig":"16"},{"size":698,"mtime":1608301731104,"results":"25","hashOfConfig":"16"},{"size":606,"mtime":1608309948909,"results":"26","hashOfConfig":"16"},{"size":271,"mtime":1608300206700,"results":"27","hashOfConfig":"16"},{"size":371,"mtime":1608298462782,"results":"28","hashOfConfig":"16"},{"size":549,"mtime":1608301792637,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"cnm794",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Egor2\\React\\trelloapp\\src\\index.js",[],["61","62"],"C:\\Users\\Egor2\\React\\trelloapp\\src\\App.js",[],"C:\\Users\\Egor2\\React\\trelloapp\\src\\reportWebVitals.js",[],"C:\\Users\\Egor2\\React\\trelloapp\\src\\Main\\index.js",["63","64"],"C:\\Users\\Egor2\\React\\trelloapp\\src\\Board\\index.js",["65","66"],"import { useParams } from 'react-router-dom';\r\nimport { useState } from 'react';\r\nimport { Table } from './Table';\r\nimport styles from './index.module.css';\r\n\r\nconst tinycolor = require('tinycolor2');\r\n\r\nexport const Board = (props) => {\r\n\r\n    const {id} = useParams();\r\n    const currentBoard = props.boardState.boards.filter(el => el.id == id)[0];\r\n\r\n    const brightenColor = tinycolor(currentBoard.color).brighten(15).toString();\r\n\r\n    const [isAddBoardFormOpen, setIsAddBoardFormOpen] = useState(false);\r\n    const [title, setTitle] = useState('');\r\n\r\n    const drawTables = () => {\r\n        const Elements = [];\r\n\r\n        currentBoard.tables.map((table, index) => {\r\n            Elements.push(\r\n                <Table \r\n                    table={table}\r\n                    board={currentBoard}\r\n                    color={currentBoard.color}\r\n                    key={index}\r\n                />\r\n            );\r\n        })\r\n\r\n        return Elements;\r\n    }\r\n\r\n    return (\r\n        <div className={styles['body']}>\r\n            {drawTables()}\r\n            {\r\n            !isAddBoardFormOpen?\r\n            <div className={styles['addTableButton']} style={{background: currentBoard.color}} onClick={() => setIsAddBoardFormOpen(true)}>\r\n                <p className={styles['pPlus']}>+</p>\r\n                <p className={styles['p']}>Добавить таблицу</p>\r\n            </div>:\r\n            <div className={styles['addTableForm']} style={{background: currentBoard.color}}>\r\n                <input type='text' placeholder='Ввидите название таблици' className={styles['input']} style={{background: brightenColor}} onInput={(e) => setTitle(e.target.value)}/>\r\n                <div className={styles['buttonContainer']}>\r\n                    {\r\n                        title?\r\n                        <button className={styles['button']} style={{background: brightenColor}} onClick={() => {currentBoard.addTable(title); setIsAddBoardFormOpen(false); setTitle('')}}>Создать</button>:\r\n                        <button className={styles['button_disable']} style={{background: brightenColor}}>Создать</button>\r\n                    }\r\n                    <button className={styles['button']} style={{background: brightenColor}} onClick={() => {setIsAddBoardFormOpen(false); setTitle('')}}>Закрыть</button>\r\n                </div>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}","C:\\Users\\Egor2\\React\\trelloapp\\src\\Main\\BoardView\\index.js",[],"C:\\Users\\Egor2\\React\\trelloapp\\src\\Main\\ColorPickerItem\\index.js",[],"C:\\Users\\Egor2\\React\\trelloapp\\src\\Board\\Table\\index.js",["67","68","69","70","71"],"C:\\Users\\Egor2\\React\\trelloapp\\src\\Board\\Table\\Card\\index.js",["72"],"import { useDrag } from 'react-dnd';\r\nimport styles from './index.module.css';\r\n\r\nexport const Card = (props) => {\r\n\r\n    const [, drag] = useDrag({\r\n        item: {\r\n        type: 'card',\r\n        TableId: props.table.id,\r\n        CardId: props.card.id\r\n    }\r\n    })\r\n\r\n    return(\r\n        <div className={styles['body'] + ' ' + 'toFind'} style={{background: props.color}} data-id={props.card.id} ref={drag}>{props.card.name}</div>\r\n    );\r\n}","C:\\Users\\Egor2\\React\\trelloapp\\src\\SingleTon\\state.js",[],"C:\\Users\\Egor2\\React\\trelloapp\\src\\Module\\Table\\table.js",[],"C:\\Users\\Egor2\\React\\trelloapp\\src\\Module\\Card\\card.js",[],"C:\\Users\\Egor2\\React\\trelloapp\\src\\utilits\\index.js",[],"C:\\Users\\Egor2\\React\\trelloapp\\src\\Module\\Board\\index.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":22,"column":52,"nodeType":"79","messageId":"80","endLine":22,"endColumn":54},{"ruleId":"77","severity":1,"message":"78","line":38,"column":61,"nodeType":"79","messageId":"80","endLine":38,"endColumn":63},{"ruleId":"81","severity":1,"message":"82","line":11,"column":69,"nodeType":"83","messageId":"84","endLine":11,"endColumn":71},{"ruleId":"77","severity":1,"message":"78","line":21,"column":48,"nodeType":"79","messageId":"80","endLine":21,"endColumn":50},{"ruleId":"81","severity":1,"message":"82","line":21,"column":73,"nodeType":"83","messageId":"84","endLine":21,"endColumn":75},{"ruleId":"81","severity":1,"message":"82","line":22,"column":67,"nodeType":"83","messageId":"84","endLine":22,"endColumn":69},{"ruleId":"81","severity":1,"message":"82","line":40,"column":64,"nodeType":"83","messageId":"84","endLine":40,"endColumn":66},{"ruleId":"81","severity":1,"message":"82","line":43,"column":30,"nodeType":"83","messageId":"84","endLine":43,"endColumn":32},{"ruleId":"77","severity":1,"message":"78","line":72,"column":45,"nodeType":"79","messageId":"80","endLine":72,"endColumn":47},{"ruleId":"85","severity":1,"message":"86","line":15,"column":46,"nodeType":"83","messageId":"87","endLine":15,"endColumn":47},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","no-global-assign","no-unsafe-negation"]